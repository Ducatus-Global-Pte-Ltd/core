#!/usr/bin/env node

'use strict';

const program = require('../ts_build/program');
const { Wallet } = require('../ts_build/wallet');

program
  .version(require('../package.json').version)
  .option('--name <name>', 'REQUIRED - Wallet Name')
  .option(
    '--recipients <recipients>',
    'REQUIRED - JSON array \'[{"address": "abc1234", "amount": xxxxxx}]\''
  )
  .option('--target [target]', 'optional - custom target block for confirmation')
  .option('--path [path]', 'optional - Custom wallet storage path')
  .parse(process.argv);

const main = async () => {
  const { name, path, recipients, target } = program;
  let wallet;
  try {
    wallet = await Wallet.loadWallet({ name, path });
    const { lastAddress } = await wallet.checkWallet();
    const parsedRecipients = JSON.parse(recipients);
    const fee = await wallet.getNetworkFee({ target });
    const nonce = await wallet.getNonce();
    const utxos = wallet.getUtxos();
    const params = {
      fee: 12,
      nonce: Number(nonce),
      utxos,
      recipients: parsedRecipients,
      from: lastAddress
    };
    const tx = await wallet.newTx(params);
    console.log('unsignedRawTx: ', tx);
    const signedTx = await wallet.signTx({ tx });
  } catch (e) {
    console.error(e);
  }
};

main();
