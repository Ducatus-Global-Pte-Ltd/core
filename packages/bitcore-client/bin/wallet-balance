#!/usr/bin/env node

const program = require('../ts_build/program');
const { Wallet } = require('../ts_build/wallet');

try {
  program
    .version(require('../package.json').version)
    .option('--name <name>', 'REQUIRED - Wallet name')
    .option('--time [time]', 'optional - Get balance at specific time')
    .option('--path [path]', 'optional - Custom wallet storage path')
    .option('--token [token]', 'optional - Get balance of an ERC20 token')
    .parse(process.argv);
} catch (e) {
  console.log(e.message);
  return program.help();
}

async function main() {
  const { name, path, time, token } = program;
  const wallet = await Wallet.loadWallet({ name, path });
  let tokenContractAddress;
  if (token) {
    const tokenObj = wallet.tokens.find(tok => tok.symbol === token);
    if (!tokenObj) {
      throw new Error(`${token} not found on wallet ${name}`);
    }
    tokenContractAddress = tokenObj.address;
  }
  const balance = await wallet.getBalance(time, tokenContractAddress);
  return Object.assign(balance, {
    currency: token || wallet.chain,
    network: wallet.network
  });
}

main()
  .then(res => console.log(res))
  .catch(err => console.error(err));
